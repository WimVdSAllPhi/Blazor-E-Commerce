@inject ToastService ToastService
@implements IDisposable

@*<div class="cToast @(IsVisible ? "show" : null) @BackgroundCssClass">
    <div class="toast__icon">
    <i class="fas fa-@IconCssClass"></i>
    </div>

    <div class="toast__content">
    <p class="toast__type">@Heading</p>
    <p class="toast__message">@Message</p>
    </div>
    </div>*@

<div id="toast" class="@(IsVisible ? "show" : null) @BackgroundCssClass">
    <div id="img" class="text-white">
        <i class="fas fa-@IconCssClass"></i>
    </div>
    <div id="desc">@Message</div>
</div>

@code {
    protected string Heading { get; set; }
    protected string Message { get; set; }
    protected bool IsVisible { get; set; }
    protected string BackgroundCssClass { get; set; }
    protected string IconCssClass { get; set; }

    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
        ToastService.OnHide += HideToast;
    }

    private void ShowToast(string message, ToastLevel level)
    {
        BuildToastSettings(level, message);
        IsVisible = true;
        StateHasChanged();
    }

    private void HideToast()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private void BuildToastSettings(ToastLevel level, string message)
    {
        switch (level)
        {
            case ToastLevel.Info:
                BackgroundCssClass = "bg-info";
                IconCssClass = "info";
                Heading = "Info";
                break;
            case ToastLevel.Success:
                BackgroundCssClass = "bg-success";
                IconCssClass = "check";
                Heading = "Success";
                break;
            case ToastLevel.Warning:
                BackgroundCssClass = "bg-warning";
                IconCssClass = "exclamation";
                Heading = "Warning";
                break;
            case ToastLevel.Error:
                BackgroundCssClass = "bg-danger";
                IconCssClass = "times";
                Heading = "Error";
                break;
        }
        Message = message;
    }

    public void Dispose()
    {
        ToastService.OnShow -= ShowToast;
    }
}
